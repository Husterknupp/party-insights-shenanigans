// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Core__Option from "@rescript/core/src/Core__Option.res.mjs";

function sameRow(cellA, cellB) {
  if (cellB.rowStart <= cellA.rowStart && cellA.rowStart <= cellB.rowEnd) {
    return true;
  } else if (cellB.rowStart <= cellA.rowEnd) {
    return cellA.rowEnd <= cellB.rowEnd;
  } else {
    return false;
  }
}

function createPolitician(amt, politicianName, party, imageUrl) {
  var message = "Cannot create politician object for name " + Core__Option.getExn(JSON.stringify(politicianName), undefined);
  return {
          amt: amt.linesOfText.join(", "),
          name: Core__Option.getExn(politicianName.linesOfText[politicianName.linesOfText.length - 1 | 0], message),
          imageUrl: Core__Option.getExn(imageUrl.imageUrl, message),
          party: Core__Option.getExn(party.linesOfText[0], message)
        };
}

function isColumnHeaderLike(cell, searchStrings) {
  return searchStrings.some(function (searchString) {
              var lowerSearchString = searchString.toLowerCase();
              var lowerHeader = cell.header.toLowerCase();
              return lowerHeader.includes(lowerSearchString);
            });
}

function getAllCellsOfFirstColumnWithHeaderLike(cells, searchStrings) {
  var relevantCells = cells.filter(function (cell) {
        return isColumnHeaderLike(cell, searchStrings);
      });
  if (relevantCells.length <= 0) {
    return [];
  }
  var firstColumnWithThatName = Core__Option.getExn(relevantCells.toSorted(function (cellA, cellB) {
              return - (cellB.colStart - cellA.colStart | 0);
            })[0], "There should always be at least one cell with the given header. Search strings: " + searchStrings.join(", "));
  return relevantCells.filter(function (cell) {
              return cell.colStart === firstColumnWithThatName.colStart;
            });
}

export {
  sameRow ,
  createPolitician ,
  isColumnHeaderLike ,
  getAllCellsOfFirstColumnWithHeaderLike ,
}
/* No side effect */
